name: e-commerce-app

services:

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - ecommerce-net

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce-net

  config-server:
    build: ./config-server
    ports:
      - "8888:8888"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health/readiness" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ecommerce-net

  eureka-server:
    build: ./eureka-server
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8761:8761"
    networks:
      - ecommerce-net

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      EUREKA_HOST: eureka-server
      CONFIG_SERVER_HOST: config-server
      REDIS_HOST: redis
    networks:
      - ecommerce-net

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      EUREKA_HOST: eureka-server
      CONFIG_SERVER_HOST: config-server
      REDIS_HOST: redis
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/user_auth_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: MySQL%4243
    networks:
      - ecommerce-net

  user:
    build: ./user
    ports:
      - "8082:8082"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      EUREKA_HOST: eureka-server
      CONFIG_SERVER_HOST: config-server
      REDIS_HOST: redis
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/user_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: MySQL%4243
    networks:
      - ecommerce-net

  product:
    build: ./product
    ports:
      - "8083:8083"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      EUREKA_HOST: eureka-server
      CONFIG_SERVER_HOST: config-server
      REDIS_HOST: redis
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/product_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: MySQL%4243
    networks:
      - ecommerce-net

  cart:
    build: ./cart
    ports:
      - "8084:8084"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      EUREKA_HOST: eureka-server
      CONFIG_SERVER_HOST: config-server
      REDIS_HOST: redis
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/cart_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: MySQL%4243
    networks:
      - ecommerce-net

  order:
    build: ./order
    ports:
      - "8085:8085"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      EUREKA_HOST: eureka-server
      CONFIG_SERVER_HOST: config-server
      REDIS_HOST: redis
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/order_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: MySQL%4243
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    driver: bridge